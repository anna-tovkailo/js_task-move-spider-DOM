{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","e","target","nodeName","wall","querySelector","wallLeft","getBoundingClientRect","left","wallTop","top","wallWidth","width","wallHeight","height","spider","spiderStyle","getComputedStyle","spiderWidth","parseFloat","spiderHeight","spiderLeft","event","clientX","spiderTop","clientY","maxLeft","maxTop","style"],"mappings":";AAAA,aAEAA,SAASC,iBAAiB,QAAS,SAACC,GAC9BA,GAAsB,QAAtBA,EAAEC,OAAOC,SAAoB,CACzBC,IAAAA,EAAOL,SAASM,cAAc,YAC9BC,EAAWF,EAAKG,wBAAwBC,KACxCC,EAAUL,EAAKG,wBAAwBG,IACvCC,EAAYP,EAAKG,wBAAwBK,MACzCC,EAAaT,EAAKG,wBAAwBO,OAE1CC,EAAShB,SAASM,cAAc,WAChCW,EAAcC,iBAAiBF,GAC/BG,EAAcC,WAAWH,EAAYJ,OACrCQ,EAAeD,WAAWH,EAAYF,QAIxCO,EAFWC,MAAMC,QAEKjB,EAAWY,EAAc,EAAI,GACnDM,EAFWF,MAAMG,QAEIhB,EAAUW,EAAe,EAAI,GAEhDM,EAAUf,EAAYO,EAAc,GACpCS,EAASd,EAAaO,EAAe,GAI3CC,GAFAA,EAAcA,EAAa,EAAK,EAAIA,GAETK,EAAWA,EAAUL,EAChDG,GAFAA,EAAaA,EAAY,EAAK,EAAIA,GAETG,EAAUA,EAASH,EAE5CT,EAAOa,MAAMpB,KAAOa,EAAa,KACjCN,EAAOa,MAAMlB,IAAMc,EAAY","file":"main.d886fd65.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.addEventListener('click', (e) => {\n  if (e.target.nodeName === 'DIV') {\n    const wall = document.querySelector('div.wall');\n    const wallLeft = wall.getBoundingClientRect().left;\n    const wallTop = wall.getBoundingClientRect().top;\n    const wallWidth = wall.getBoundingClientRect().width;\n    const wallHeight = wall.getBoundingClientRect().height;\n\n    const spider = document.querySelector('.spider');\n    const spiderStyle = getComputedStyle(spider);\n    const spiderWidth = parseFloat(spiderStyle.width);\n    const spiderHeight = parseFloat(spiderStyle.height);\n\n    const mouseX = event.clientX;\n    const mouseY = event.clientY;\n    let spiderLeft = mouseX - wallLeft - spiderWidth / 2 - 10;\n    let spiderTop = mouseY - wallTop - spiderHeight / 2 - 10;\n\n    const maxLeft = wallWidth - spiderWidth - 20;\n    const maxTop = wallHeight - spiderHeight - 20;\n\n    spiderLeft = (spiderLeft < 0) ? 0 : spiderLeft;\n    spiderTop = (spiderTop < 0) ? 0 : spiderTop;\n    spiderLeft = (spiderLeft > maxLeft) ? maxLeft : spiderLeft;\n    spiderTop = (spiderTop > maxTop) ? maxTop : spiderTop;\n\n    spider.style.left = spiderLeft + 'px';\n    spider.style.top = spiderTop + 'px';\n  }\n});\n"]}